{
  "topicId": "recursion-1",
  "id": "strcount",
  "difficulty": "Medium",
  "functionName": "strCount",
  "title": {
    "en": "Str Count",
    "ru": "Подсчет подстроки",
    "uz": "Satr ichidagi satrni hisoblash"
  },
  "description": {
    "en": "Given a string and a non-empty substring, compute recursively the number of times that the substring appears in the string, without the substrings overlapping.",
    "ru": "Дана строка и непустая подстрока. Рекурсивно подсчитайте, сколько раз подстрока появляется в строке, не учитывая пересекающиеся вхождения.",
    "uz": "Berilgan satr va bo‘sh bo‘lmagan kichik satr. Rekursiv ravishda kichik satr satrda necha marta uchrashini hisoblang, kesishmaydigan joylashuvlar hisobga olinadi."
  },
  "solution": "function strCount(str, sub) {\n  if (str.length < sub.length) return 0;\n  if (str.substring(0, sub.length) === sub) {\n    return 1 + strCount(str.substring(sub.length), sub);\n  } else {\n    return strCount(str.substring(1), sub);\n  }\n}",
  "starterCode": "function strCount(str, sub) {\n  // type here\n}",
  "testCases": [
    {
      "input": [
        "catcowcat",
        "cat"
      ],
      "output": 2
    },
    {
      "input": [
        "catcowcat",
        "cow"
      ],
      "output": 1
    },
    {
      "input": [
        "catcowcat",
        "dog"
      ],
      "output": 0
    },
    {
      "input": [
        "aaaa",
        "aa"
      ],
      "output": 2
    },
    {
      "input": [
        "aaaaa",
        "aa"
      ],
      "output": 2
    }
  ]
}
