[
  {
    "topicId": "warmup-1",
    "id": "monkeytrouble",
    "difficulty": "Easy",
    "functionName": "monkeyTrouble",
    "description": "We have two monkeys, a and b, and the parameters aSmile and bSmile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return true if we are in trouble.",
    "solution": "function monkeyTrouble(aSmile, bSmile) {\n  return aSmile === bSmile;\n}",
    "starterCode": "function monkeyTrouble(aSmile, bSmile) {\n  // type here\n}",
    "testCases": [
      { "input": ["true", "true"], "output": true },
      { "input": ["false", "false"], "output": true },
      { "input": ["true", "false"], "output": false },
      { "input": ["false", "true"], "output": false }
    ]
  },
  {
    "topicId": "warmup-1",
    "id": "sumdouble",
    "difficulty": "Easy",
    "functionName": "sumDouble",
    "description": "Given two int values, return their sum. Unless the two values are the same, then return double their sum.",
    "solution": "function sumDouble(a, b) {\n  return a === b ? 2 * (a + b) : a + b;\n}",
    "starterCode": "function sumDouble(a, b) {\n  // type here\n}",
    "testCases": [
      { "input": ["1", "2"], "output": 3 },
      { "input": ["3", "2"], "output": 5 },
      { "input": ["2", "2"], "output": 8 },
      { "input": ["-1", "0"], "output": -1 },
      { "input": ["3", "3"], "output": 12 },
      { "input": ["0", "0"], "output": 0 },
      { "input": ["0", "1"], "output": 1 },
      { "input": ["3", "4"], "output": 7 }
    ]
  },
  {
    "topicId": "warmup-1",
    "id": "diff21",
    "difficulty": "Easy",
    "functionName": "diff21",
    "description": "Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.",
    "solution": "function diff21(n) {\n  return n > 21 ? 2 * Math.abs(n - 21) : Math.abs(n - 21);\n}",
    "starterCode": "function diff21(n) {\n  // type here\n}",
    "testCases": [
      { "input": ["19"], "output": 2 },
      { "input": ["10"], "output": 11 },
      { "input": ["21"], "output": 0 },
      { "input": ["22"], "output": 2 },
      { "input": ["25"], "output": 8 },
      { "input": ["30"], "output": 18 },
      { "input": ["0"], "output": 21 },
      { "input": ["1"], "output": 20 },
      { "input": ["2"], "output": 19 },
      { "input": ["-1"], "output": 22 },
      { "input": ["-2"], "output": 23 },
      { "input": ["50"], "output": 58 }
    ]
  },
  {
    "topicId": "warmup-1",
    "id": "parrottrouble",
    "difficulty": "Easy",
    "functionName": "parrotTrouble",
    "description": "We have a loud talking parrot. The \"hour\" parameter is the current hour time in the range 0..23. We are in trouble if the parrot is talking and the hour is before 7 or after 20. Return true if we are in trouble.",
    "solution": "function parrotTrouble(talking, hour) {\n  return talking && (hour < 7 || hour > 20);\n}",
    "starterCode": "function parrotTrouble(talking, hour) {\n  // type here\n}",
    "testCases": [
      { "input": ["true", "6"], "output": true },
      { "input": ["true", "7"], "output": false },
      { "input": ["false", "6"], "output": false },
      { "input": ["true", "21"], "output": true },
      { "input": ["false", "21"], "output": false },
      { "input": ["true", "23"], "output": true },
      { "input": ["false", "23"], "output": false },
      { "input": ["true", "20"], "output": false },
      { "input": ["false", "12"], "output": false }
    ]
  }
]
